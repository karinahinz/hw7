
#include<iostream>
#include<cmath>

using namespace std;

void orb(double*p, const double* const R, const double mu){
 double r=sqrt((R[0]+mu)*(R[0]+mu)+R[1]*R[1]);
 double s=sqrt((R[0]-1+mu)*(R[0]-1+mu)+R[1]*R[1]);
  
  p[0]=R[2];
  p[1]=R[3];
  p[2]=R[0]+2*p[1]-(1-mu)*(R[0]+mu)/(r*r*r)-mu*(R[0]-1+mu)/(s*s*s);
  p[3]=R[1]-2*p[0]-(1-mu)*R[1]/(r*r*r)-mu*R[1]/(s*s*s);
  
}


int main(){
double R[4];
const double mu= 0.012277471;
double t     = 0;
double dt    = 1e-3;     
double ddt;
const double T  = 17.065216560157;
R[0]=0.994;
R[1]=0;
R[2]=0;
R[3]=-2.00158510637908;

double RK4[4];
double RK5[4];

double k1[4];
double k2[4];
double k3[4];
double k4[4];
double k5[4];
double k6[4];
double k7[4];
double ytemp[4];
double h[4];
double hmax;
int i=0;

while(T>t){
  i++;
  t+=dt;
  
  orb(k1,R,mu);
   ytemp[0] = R[0] + dt*(1/5.0) * k1[0];
   ytemp[1] = R[1] + dt*(1/5.0) * k1[1];
   ytemp[2] = R[2] + dt*(1/5.0) * k1[2];
   ytemp[3] = R[3] + dt*(1/5.0) * k1[3];
  
   orb(k2,ytemp,mu);
    ytemp[0] = R[0] + dt*(3/40.0) * k1[0]+dt*(9/40.0)*k2[0];
    ytemp[1] = R[1] + dt*(3/40.0) * k1[1]+dt*(9/40.0)*k2[1];
    ytemp[2] = R[2] + dt*(3/40.0) * k1[2]+dt*(9/40.0)*k2[2];
    ytemp[3] = R[3] + dt*(3/40.0) * k1[3]+dt*(9/40.0)*k2[3];
   
  orb(k3,ytemp,mu);
     ytemp[0] = R[0] + dt*(44/45.0) * k1[0]+dt*(-55/16.0)*k2[0]+dt*(32/9.0)*k3[0];
     ytemp[1] = R[1] + dt*(44/45.0) * k1[1]+dt*(-55/16.0)*k2[1]+dt*(32/9.0)*k3[1];
     ytemp[2] = R[2] + dt*(44/45.0) * k1[2]+dt*(-55/16.0)*k2[2]+dt*(32/9.0)*k3[2];
     ytemp[3] = R[3] + dt*(44/45.0) * k1[3]+dt*(-55/16.0)*k2[3]+dt*(32/9.0)*k3[3];
     
  orb(k4,ytemp,mu);
      ytemp[0] = R[0] + dt*(19372/6561) * k1[0]+dt*(-25360/2187.0)*k2[0]+dt*(64448/6561.0)*k3[0]
      + dt*(-212/729.0)*k4[0];
      ytemp[1] = R[1] + dt*(19372/6561) * k1[1]+dt*(-25360/2187.0)*k2[0]+dt*(64448/6561.0)*k3[1]
      + dt*(-212/729.0)*k4[0];
      ytemp[2] = R[2] + dt*(19372/6561) * k1[2]+dt*(-25360/2187.0)*k2[0]+dt*(64448/6561.0)*k3[2]
      + dt*(-212/729.0)*k4[0];
      ytemp[3] = R[3] + dt*(19372/6561) * k1[3]+dt*(-25360/2187.0)*k2[0]+dt*(64448/6561.0)*k3[3]
      + dt*(-212/729.0)*k4[0];
      
  orb(k5,ytemp,mu);
      ytemp[0] = R[0] + dt*(19372/6561.0) * k1[0]+dt*(-355/33.0)*k2[0]+dt*(46732/5247.0)*k3[0]
      + dt*(49/176.0)*k4[0]+dt*(-5103/18656.0)*k5[0];
      ytemp[1] = R[1] + dt*(19372/6561.0) * k1[1]+dt*(-355/33.0)*k2[1]+dt*(46732/5247.0)*k3[1]
      + dt*(49/176.0)*k4[1]+dt*(-5103/18656.0)*k5[1];
      ytemp[2] = R[2] + dt*(19372/6561.0) * k1[2]+dt*(-355/33.0)*k2[2]+dt*(46732/5247.0)*k3[2]
      + dt*(49/176.0)*k4[2]+dt*(-5103/18656.0)*k5[2];
      ytemp[3] = R[3] + dt*(19372/6561.0) * k1[3]+dt*(-355/33.0)*k2[3]+dt*(46732/5247.0)*k3[3]
      + dt*(49/176.0)*k4[3]+dt*(-5103/18656.0)*k5[3];
      
  orb(k6,ytemp,mu);
      ytemp[0] = R[0] + dt*(35/384.0) * k1[0]+dt*(500/1113.0)*k3[0]+ dt*(125/192.0)*k4[0]
       +dt*(-2187/6784.0)*k5[0]+dt*(11/84.0)*k6[0];
      ytemp[1] = R[1] + dt*(35/384.0) * k1[1]+dt*(500/1113.0)*k3[1]+ dt*(125/192.0)*k4[1]
       +dt*(-2187/6784.0)*k5[0]+dt*(11/84.0)*k6[0];
      ytemp[2] = R[2] + dt*(35/384.0) * k1[2]+dt*(500/1113.0)*k3[2]+ dt*(125/192.0)*k4[2]
       +dt*(-2187/6784.0)*k5[0]+dt*(11/84.0)*k6[0];
      ytemp[3] = R[3] + dt*(35/384.0) * k1[3]+dt*(500/1113.0)*k3[3]+ dt*(125/192.0)*k4[3]
       +dt*(-2187/6784.0)*k5[0]+dt*(11/84.0)*k6[0];
  
  orb(k7,ytemp,mu);
  
  RK4[0]=R[0]+dt*((5179/57600.0)*k1[0]+0*k2[0]+(7571/16695.0)*k3[0]+(393/640.0)*k4[0]
  +(-92097/339200.0)*k5[0]+(187/2100.0)*k6[0]+(1/40.0)*k7[0]);
  RK4[1]=R[1]+dt*((5179/57600.0)*k1[1]+0*k2[1]+(7571/16695.0)*k3[1]+(393/640.0)*k4[1]
  +(-92097/339200.0)*k5[1]+(187/2100.0)*k6[1]+(1/40.0)*k7[1]);
  RK4[2]=R[2]+dt*((5179/57600.0)*k1[2]+0*k2[2]+(7571/16695.0)*k3[2]+(393/640.0)*k4[2]
  +(-92097/339200.0)*k5[2]+(187/2100.0)*k6[2]+(1/40.0)*k7[2]);
  RK4[3]=R[3]+dt*((5179/57600.0)*k1[3]+0*k2[3]+(7571/16695.0)*k3[3]+(393/640.0)*k4[3]
  +(-92097/339200.0)*k5[3]+(187/2100.0)*k6[3]+(1/40.0)*k7[3]);
  
  
  RK5[0]=R[0]+dt*((35/384.0)*k1[0]+0*k2[0]+(500/1113.0)*k3[0]+(125/192.0)*k4[0]
  +(-2187/6784.0)*k5[0]+(11/84.0)*k6[0]+0*k7[0]);
  RK5[1]=R[1]+dt*((35/384.0)*k1[1]+0*k2[1]+(500/1113.0)*k3[1]+(125/192.0)*k4[1]
  +(-2187/6784.0)*k5[1]+(11/84.0)*k6[1]+0*k7[1]);
  RK5[2]=R[2]+dt*((35/384.0)*k1[2]+0*k2[2]+(500/1113.0)*k3[2]+(125/192.0)*k4[2]
  +(-2187/6784.0)*k5[2]+(11/84.0)*k6[2]+0*k7[2]);
  RK5[3]=R[3]+dt*((35/384.0)*k1[3]+0*k2[3]+(500/1113.0)*k3[3]+(125/192.0)*k4[3]
  +(-2187/6784.0)*k5[3]+(11/84.0)*k6[3]+0*k7[3]);
  
  
  
  //stepsizecontrol
  h[0]=abs(RK4[0]-RK5[0]);
  h[1]=abs(RK4[1]-RK5[1]);
  h[2]=abs(RK4[2]-RK5[2]);
  h[3]=abs(RK4[3]-RK5[3]);
  
  hmax=h[0];

	    for (int l=1;l<4;l++){
		  if(h[l]>hmax) 
		    hmax=h[l];
	    }  
  
  ddt=dt*pow((1e-5/hmax),1/5.0)*0.8;
  dt=ddt;
  
  
	     for (int n=0;n<4;n++) R[n]=RK4[n];

	       
	     cout<< R[0] <<" " <<R[1]<< " "<< t <<" "<< dt <<endl;  
  
  
  
}

return 0;
}